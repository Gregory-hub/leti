using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace work2
{
    public partial class Form1 : Form
    {
        private Tree FractalTree;
        private int Level = -1;
        private const int NodeRadius = 10;
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            pictureBoxFractal.Width = pictureBoxFractal.Height;
            pictureBoxTree.Width = pictureBoxTree.Height;

            FractalTree = new Tree();
            FractalTree.Build(pictureBoxFractal.Width - 1);

            object[] levels = new object[FractalTree.MaxLevel + 1];
            for (int i = 0; i <= FractalTree.MaxLevel; i++) levels[i] = i;
            comboBox1.Items.AddRange(levels);
            comboBox1.DropDownStyle = ComboBoxStyle.DropDownList;
        }

        private void DrawFractal()
        {
            Graphics gr = pictureBoxFractal.CreateGraphics();
            Brush brush = new SolidBrush(Color.Black);
            gr.Clear(pictureBoxFractal.BackColor);

            List<Node> nodes = new List<Node>();
            FractalTree.GetLevelNodes(FractalTree.Root, Level, 0, ref nodes);

            foreach (Node node in nodes)
            {
                gr.FillRectangle(brush, node.Coords.X, node.Coords.Y, node.Width, node.Width);
            }
        }

        private void DrawTree()
        {
            Graphics gr = pictureBoxTree.CreateGraphics();
            Brush brush = new SolidBrush(Color.Black);
            gr.Clear(pictureBoxTree.BackColor);

            gr.FillEllipse(brush, pictureBoxTree.Width / 2 - NodeRadius, pictureBoxTree.Height / (FractalTree.MaxLevel + 2) - NodeRadius, NodeRadius * 2, NodeRadius * 2);

            DrawChildren(FractalTree.Root, 0, gr, brush);
        }

        private void DrawChildren(Node root, int level, Graphics gr, Brush brush)
        {
            int distance = pictureBoxTree.Width / (int)Math.Pow(Node.ChildrenCount, level);
            gr.FillEllipse(brush, pictureBoxTree.Width / 2 - NodeRadius, pictureBoxTree.Height / (FractalTree.MaxLevel + 2) - NodeRadius, NodeRadius * 2, NodeRadius * 2);
            
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (Level == -1) return;
            DrawFractal();
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            Level = comboBox1.SelectedIndex;
            DrawTree();
        }
    }
}

